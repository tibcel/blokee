<Activity mc:Ignorable="sap sap2010" x:Class="GetAvailableCorners" this:GetAvailableCorners.in_colorPlayer="blue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_colorsDT" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_colorPlayer" Type="InArgument(x:String)" />
    <x:Property Name="out_strCorners" Type="OutArgument(x:String)" />
    <x:Property Name="out_countBlueCorners" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_countGreenCorners" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_countRedCorners" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_countOrangeCorners" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_CornersPath" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>913.6,5246.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="924,5181.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="882.4,226.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_strCorners]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[out_countBlueCorners]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[out_countGreenCorners]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[out_countOrangeCorners]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[out_countRedCorners]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each row" sap:VirtualizedContainerService.HintSize="882.4,1505.6" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[enumerable.range(0,io_colorsDT.Rows.count)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="indexcurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="475.2,1380.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each column" sap:VirtualizedContainerService.HintSize="433.6,1288" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[enumerable.range(0,io_colorsDT.Columns.count)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Int32">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="indexcurrentColumn" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="387.2,1163.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="boolHasAtLeastOneInCorner" />
                      <Variable x:TypeArguments="x:Boolean" Name="boolIsNotEdge" />
                      <Variable x:TypeArguments="x:Boolean" Name="boolHasAtLeastOneInCornerInamic" />
                      <Variable x:TypeArguments="x:Boolean" Name="boolIsNotEdgeInamic" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="auxListOfString" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Green corners and edge" sap:VirtualizedContainerService.HintSize="345.6,651.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="color" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign color" sap:VirtualizedContainerService.HintSize="304,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[color]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">green</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="IS CORNER" sap:VirtualizedContainerService.HintSize="304,349.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign has at least one corner" sap:VirtualizedContainerService.HintSize="262.4,64" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolHasAtLeastOneInCorner]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[If(indexcurrentRow&gt;0 And indexcurrentColumn&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn-1).tostring.equals(color),False) Or 
If( indexcurrentRow&gt;0 And indexcurrentColumn&lt;(io_colorsDT.columns.count-1) ,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn+1).tostring.equals(color),False) Or 
If(indexcurrentRow&lt;(io_colorsDT.rows.count-1) And indexcurrentcolumn&gt;0,io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn-1).tostring.equals(color),False) Or 
If(indexcurrentrow&lt;(io_colorsDT.rows.count-1) And indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn+1).tostring.equals(color),False)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign is not edge" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsNotEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[not( if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and boolHasAtLeastOneInCorner and boolIsNotEdge]" DisplayName="If is corner" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_91">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["corner-"+color]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[out_countGreenCorners]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[out_countGreenCorners+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Is EDGE " sap:VirtualizedContainerService.HintSize="304,68.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="BoolISEdge" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and BoolISEdge]" sap:VirtualizedContainerService.HintSize="483.2,332" sap2010:WorkflowViewState.IdRef="If_5">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["edge"+Color]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="orange corners and edge" sap:VirtualizedContainerService.HintSize="345.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_29">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="color" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="304,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[color]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">orange</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="IS CORNER" sap:VirtualizedContainerService.HintSize="304,345.6" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign hast at least ome " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolHasAtLeastOneInCorner]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0 and indexcurrentColumn&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentRow&gt;0 and indexcurrentColumn&lt;(io_colorsDT.columns.count-1) ,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn+1).tostring.equals(color),false) OR if(indexcurrentRow&lt;(io_colorsDT.rows.count-1) and indexcurrentcolumn&gt;0,io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn-1).tostring.equals(color),false) or if(indexcurrentrow&lt;(io_colorsDT.rows.count-1) and indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn+1).tostring.equals(color),false)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsNotEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[not( if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and boolHasAtLeastOneInCorner and boolIsNotEdge]" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["corner-"+color]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[out_countOrangeCorners]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[out_countOrangeCorners+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Is EDGE " sap:VirtualizedContainerService.HintSize="304,68.8" sap2010:WorkflowViewState.IdRef="Sequence_28">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="BoolISEdge" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and BoolISEdge]" sap:VirtualizedContainerService.HintSize="483.2,332" sap2010:WorkflowViewState.IdRef="If_8">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["edge"+Color]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="blue corners and edge" sap:VirtualizedContainerService.HintSize="345.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="color" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[color]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">blue</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="IS CORNER" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Sequence_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign hast at least ome " sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolHasAtLeastOneInCorner]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0 and indexcurrentColumn&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentRow&gt;0 and indexcurrentColumn&lt;(io_colorsDT.columns.count-1) ,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn+1).tostring.equals(color),false) OR if(indexcurrentRow&lt;(io_colorsDT.rows.count-1) and indexcurrentcolumn&gt;0,io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn-1).tostring.equals(color),false) or if(indexcurrentrow&lt;(io_colorsDT.rows.count-1) and indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn+1).tostring.equals(color),false)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsNotEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[not( if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and boolHasAtLeastOneInCorner and boolIsNotEdge]" sap:VirtualizedContainerService.HintSize="483.2,432" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["corner-"+color]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[out_countBlueCorners]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[out_countBlueCorners+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Is EDGE " sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Sequence_35">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="BoolISEdge" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and BoolISEdge]" sap:VirtualizedContainerService.HintSize="483.2,332" sap2010:WorkflowViewState.IdRef="If_10">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_33">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["edge"+Color]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="red corners and edge" sap:VirtualizedContainerService.HintSize="345.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="color" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[color]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">red</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="IS CORNER" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Sequence_39">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign hast at least ome " sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolHasAtLeastOneInCorner]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0 and indexcurrentColumn&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentRow&gt;0 and indexcurrentColumn&lt;(io_colorsDT.columns.count-1) ,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn+1).tostring.equals(color),false) OR if(indexcurrentRow&lt;(io_colorsDT.rows.count-1) and indexcurrentcolumn&gt;0,io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn-1).tostring.equals(color),false) or if(indexcurrentrow&lt;(io_colorsDT.rows.count-1) and indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn+1).tostring.equals(color),false)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsNotEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[not( if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and boolHasAtLeastOneInCorner and boolIsNotEdge]" sap:VirtualizedContainerService.HintSize="483.2,432" sap2010:WorkflowViewState.IdRef="If_11">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_37">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["corner-"+color]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[out_countRedCorners]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[out_countRedCorners+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Is EDGE " sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Sequence_42">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="BoolISEdge" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolIsEdge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals(color),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals(color),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals(color),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals(color),false)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and BoolISEdge]" sap:VirtualizedContainerService.HintSize="483.2,332" sap2010:WorkflowViewState.IdRef="If_12">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["edge"+Color]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_41">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="345.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="524.8,624.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign hast at least ome " sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[boolHasAtLeastOneInCorner]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0 and indexcurrentColumn&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn-1).tostring.equals("20"),false) OR if( indexcurrentRow&gt;0 and indexcurrentColumn&lt;(io_colorsDT.columns.count-1) ,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn+1).tostring.equals("20"),false) OR if(indexcurrentRow&lt;(io_colorsDT.rows.count-1) and indexcurrentcolumn&gt;0,io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn-1).tostring.equals("20"),false) or if(indexcurrentrow&lt;(io_colorsDT.rows.count-1) and indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn+1).tostring.equals("20"),false)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[boolIsNotEdgeInamic]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">[not( if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals("20"),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals("20"),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals("20"),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals("20"),false))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and boolIsNotEdgeInamic and boolHasAtLeastOneInCornerInamic]" sap:VirtualizedContainerService.HintSize="483.2,341.6" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">["11"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each row" sap:VirtualizedContainerService.HintSize="882.4,2855.2" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[enumerable.range(0,io_colorsDT.Rows.count)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="indexcurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="847.2,2730.4" sap2010:WorkflowViewState.IdRef="Sequence_75">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each column" sap:VirtualizedContainerService.HintSize="805.6,2637.6" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[enumerable.range(0,io_colorsDT.Columns.count)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Int32">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="indexcurrentColumn" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="770.4,2512.8" sap2010:WorkflowViewState.IdRef="Sequence_74">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="boolHasAtLeastOneInCorner" />
                      <Variable x:TypeArguments="x:Boolean" Name="boolIsNotEdge" />
                      <Variable x:TypeArguments="x:Boolean" Name="boolHasAtLeastOneInCornerInamic" />
                      <Variable x:TypeArguments="x:Boolean" Name="boolIsNotEdgeInamic" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="auxListOfString" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign Initialize Aux list of string" sap:VirtualizedContainerService.HintSize="728.8,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[auxListOfString]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[new list ( of string)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;corner-&quot;+in_colorPlayer.trim.tolower)]" DisplayName="If- corner our player- 30" sap:VirtualizedContainerService.HintSize="728.8,786.4" sap2010:WorkflowViewState.IdRef="If_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="693.6,597.6" sap2010:WorkflowViewState.IdRef="Sequence_76">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="652,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,240" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <AddToCollection x:TypeArguments="x:String" Collection="[auxListOfString]" DisplayName="Add To Collection row " sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[indexcurrentRow.tostring]" />
                                <AddToCollection x:TypeArguments="x:String" Collection="[auxListOfString]" DisplayName="Add To Collection column" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[indexcurrentColumn.tostring]" />
                                <AddToCollection x:TypeArguments="scg:List(x:String)" Collection="[out_strCorners]" DisplayName="Add To Collection little List" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[auxListOfString]" />
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <If Condition="[string.IsNullOrEmpty(out_strCorners)]" DisplayName="If add to string list of corners" sap:VirtualizedContainerService.HintSize="652,312" sap2010:WorkflowViewState.IdRef="If_28">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_89">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_strCorners]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[indexcurrentRow.tostring+"_"+indexcurrentColumn.tostring]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_strCorners]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[out_strCorners+","+indexcurrentRow.tostring+"_"+indexcurrentColumn.tostring]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                          <Assign DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="652,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["30"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_77">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(in_colorPlayer.trim.tolower)]" DisplayName="If- our player - 10" sap:VirtualizedContainerService.HintSize="728.8,341.6" sap2010:WorkflowViewState.IdRef="If_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_78">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["10"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_79">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;edge&quot;+ in_colorPlayer.trim.tolower)]" DisplayName="If- edge player- 10" sap:VirtualizedContainerService.HintSize="728.8,52.8" sap2010:WorkflowViewState.IdRef="If_24">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_80">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["10"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_81">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(&quot;edge&quot;) and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(in_colorPlayer.trim.tolower)]" DisplayName="If- edge - not our  player - 0" sap:VirtualizedContainerService.HintSize="728.8,52.8" sap2010:WorkflowViewState.IdRef="If_25">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_82">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["0"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If Condition="[not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(&quot;edge&quot;) and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(in_colorPlayer.trim.tolower) and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(&quot;corner&quot;) and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;10&quot;)  and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;30&quot;)]" DisplayName="If- inamic- 20" sap:VirtualizedContainerService.HintSize="728.8,341.6" sap2010:WorkflowViewState.IdRef="If_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_84">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["20"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_85">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If Condition="[not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(&quot;edge&quot;) and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(in_colorPlayer.trim.tolower) and  io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.contains(&quot;corner&quot;) and not io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;)]" DisplayName="If- corner inamic- 40" sap:VirtualizedContainerService.HintSize="728.8,482.4" sap2010:WorkflowViewState.IdRef="If_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="538.4,293.6" sap2010:WorkflowViewState.IdRef="Sequence_86">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring]" sap:VirtualizedContainerService.HintSize="496.8,200.8" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                            <Assign x:Key="corner-blue" DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["40"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign x:Key="corner-green" DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["50"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign x:Key="corner-red" DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["60"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign x:Key="corner-orange" DisplayName="Assign to corner " sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["70"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Switch>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_87">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="728.8,22.4" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="524.8,624.8" sap2010:WorkflowViewState.IdRef="Sequence_73">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign hast at least ome " sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[boolHasAtLeastOneInCorner]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">[if(indexcurrentRow&gt;0 and indexcurrentColumn&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn-1).tostring.equals("20"),false) OR if( indexcurrentRow&gt;0 and indexcurrentColumn&lt;(io_colorsDT.columns.count-1) ,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn+1).tostring.equals("20"),false) OR if(indexcurrentRow&lt;(io_colorsDT.rows.count-1) and indexcurrentcolumn&gt;0,io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn-1).tostring.equals("20"),false) or if(indexcurrentrow&lt;(io_colorsDT.rows.count-1) and indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn+1).tostring.equals("20"),false)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[boolIsNotEdgeInamic]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">[not( if(indexcurrentRow&gt;0,io_colorsDT.Rows(indexcurrentRow-1)(indexcurrentColumn).tostring.equals("20"),false) OR if(indexcurrentColumn&gt;0, io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn-1).tostring.equals("20"),false) OR if( indexcurrentColumn&lt;(io_colorsDT.columns.count-1),io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn+1).tostring.equals("20"),false) or if( indexcurrentRow&lt;(io_colorsDT.rows.count-1),io_colorsDT.Rows(indexcurrentRow+1)(indexcurrentColumn).tostring.equals("20"),false))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn).tostring.equals(&quot;0&quot;) and boolIsNotEdgeInamic and boolHasAtLeastOneInCornerInamic]" sap:VirtualizedContainerService.HintSize="483.2,332" sap2010:WorkflowViewState.IdRef="If_21">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[io_colorsDT.Rows(indexcurrentRow)(indexcurrentColumn)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">["11"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_72">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="882.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;str corners : &quot;+out_strCorners]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="882.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot; count green : &quot;+out_countGreenCorners.tostring + &quot;-- count blue corners :&quot;+out_countBlueCorners.tostring+&quot; --- red corners: &quot;+out_countRedCorners.tostring+ &quot;--- orange corners: &quot;+out_countOrangeCorners.tostring]" />
    <ui:WriteRange AddHeaders="False" DataTable="[io_colorsDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="882.4,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[in_CornersPath]" />
  </Sequence>
</Activity>